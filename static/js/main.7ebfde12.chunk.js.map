{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","views/DocumentationView.js","components/timers/shared/DisplayTime.js","components/timers/shared/input.js","components/timers/Countdown.js","components/timers/shared/ProgressBar.js","components/timers/shared/DisplayRounds.js","components/timers/Tabata.js","components/timers/shared/button.js","components/timers/shared/Panel.js","components/timers/Stopwatch.js","components/timers/XY.js","views/TimersView.js","views/AddView.js","App.js","index.js"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","Title","_templateObject3","RenderComponent","_templateObject4","Documentation","table","_templateObject5","DocumentComponent","_ref","title","component","propDocs","React","createElement","map","doc","index","key","prop","description","type","defaultValue","sizeMapping","small","medium","large","Dot","span","props","size","color","DotGroup","Loading","_ref$size","_ref$color","Display","formatTime","time","minutes","Math","floor","slice","seconds","concat","DisplayTime","InputContainer","LabelContainer","Label","label","SelectInput","select","Input","setMinutes","setSeconds","disabled","renderOptions","onStart","start","end","options","i","push","value","onChange","e","Number","target","Countdown","_useState","useState","_useState2","_slicedToArray","setTime","_useContext","useContext","GlobalContext","activeIndex","timers","setTimers","setActiveIndex","timerIsRunning","isActive","useEffect","interval","console","log","setInterval","prevTime","clearInterval","className","mins","timerToEdit","updatedTimer","_objectSpread","timersCopy","_toConsumableArray","splice","secs","StyledProgressBar","ProgressBar","max","DisplayRoundsContainer","DisplayRoundsLabel","DisplayRoundsSelect","DisplayRounds","currentRound","initialRounds","onRoundsChange","resting","rounds","setRounds","newRounds","Tabata","initialTime","_useState3","_useState4","running","setRunning","_useState5","_useState6","setCurrentRound","_useState7","_useState8","isResting","setIsResting","_useState9","setProgress","prevRound","rnds","StyledButton","button","Button","onClick","children","StyledPanel","Panel","Stopwatch","FaFastForward","XY","Timers","Timer","ButtonGroup","TimerGroup","AddButton","Link","_templateObject6","TimersView","isPaused","setIsPaused","setTimerIsRunning","length","Fragment","timer","timerItem","componentType","renderComponent","to","FaPlus","BackButton","BackButtonIcon","FaArrowLeft","StyledRemoveButton","_templateObject7","_templateObject8","TimerTitle","_templateObject9","TimerButtons","_templateObject10","AddView","onRemoveTimer","timerQueue","setTimerQueue","newTimersQueue","handleAddTimer","queueItem","updatedTimers","removedTimer","handleRemoveTimer","createContext","App","_useState10","pausedIndex","setPausedIndex","Provider","Router","Routes","Route","path","element","DocumentationView","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.7ebfde12.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nconst DocumentComponent = ({ title, component, propDocs }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <Container>\n        <RenderComponent>{component}</RenderComponent>\n        <Documentation>\n          <thead>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {propDocs.map((doc, index) => {\n              return (\n                <tr key={index}>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Documentation>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nconst Loading = ({ size = \"medium\", color = primaryColor }) => {\n  return (\n    <Container>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n    </Container>\n  );\n};\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\n/**\n * You can document your components by using the DocumentComponent component\n */\nconst Documentation = () => {\n  return (\n    <Container>\n      <div>\n        <Title>Documentation</Title>\n        <DocumentComponent\n          title=\"Loading spinner \"\n          component={<Loading />}\n          propDocs={[\n            {\n              prop: \"size\",\n              description: \"Changes the size of the loading spinner\",\n              type: \"string\",\n              defaultValue: \"medium\",\n            },\n          ]}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Documentation;\n","\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Display = styled.div`\n  transition: opacity 0.5s ease-in-out;\n  font-size: 60px;\n  z-index: 0;\n  font-weight: 200;\n  padding: 7px 7px;\n  margin-bottom: 10px;\n  color: red;\n  text-align: center;\n  background-color: #121212;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n  position: relative;\n\n  /* Outer background layer with red lines */\n  background-image: \n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%);\n  background-size: 30px 30px, 30px 30px, 30px 30px, 30px 30px;\n  background-position: 0 0, 10px 10px, 20px 20px, 15px 15px;\n\n\n  \n  }\n`;\n\n\n\nconst DisplayTime = ({ time }) => (\n    <Display>{formatTime(time)}</Display>\n  );\n  \n  const formatTime = (time) => {\n    const minutes = (\"0\" + Math.floor((time / 60000) % 60)).slice(-2);\n    const seconds = (\"0\" + Math.floor((time / 1000) % 60)).slice(-2);\n    return `${minutes}:${seconds}`;\n  };\n\n\n\nexport default DisplayTime;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst InputContainer = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  flex-direction: row;\n  align-items: center;\n  background-color: #121212;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n  background-image: \n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%);\n  background-size: 30px 30px, 30px 30px, 30px 30px, 30px 30px;\n  background-position: 0 0, 10px 10px, 20px 20px, 15px 15px;\n`;\n\nconst LabelContainer = styled.div`\n  flex: 1;\n  align-items: center;\n  border-radius: 25px;\n  margin: 10px;\n  background-color: black;\n`;\n\nconst Label = styled.label`\n  flex: 1; \n  font-weight: 300;\n  font-size: 16px;\n  background-color: black;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n`;\n\nconst SelectInput = styled.select`\n  flex: 1;\n  font-weight: 300;\n  font-size: 16px;\n  padding: 7px;\n  margin: 10px 0px 10px 10px;\n  background-color: darkred;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  border-radius: 25px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: black;\n  }\n`;\n\nconst Input = ({ minutes, setMinutes, seconds, setSeconds, disabled, onStart }) => {\n  const renderOptions = (start, end) => {\n    const options = [];\n    for (let i = start; i <= end; i++) {\n      options.push(\n        <option key={i} value={i}>\n          {i < 10 ? `0${i}` : i}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  return (\n    <InputContainer>\n      <LabelContainer>\n        <Label>MINUTES:</Label>\n        <SelectInput\n          value={minutes}\n          onChange={(e) => setMinutes(Number(e.target.value))}\n          disabled={disabled}\n        >\n          {renderOptions(0, 59)}\n        </SelectInput>\n      </LabelContainer>\n\n      <LabelContainer>\n        <Label>SECONDS:</Label>\n        <SelectInput\n          value={seconds}\n          onChange={(e) => setSeconds(Number(e.target.value))}\n          disabled={disabled}\n        >\n          {renderOptions(0, 59)}\n        </SelectInput>\n      </LabelContainer>\n    </InputContainer>\n  );\n};\n\nexport default Input;","import React, { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Input from \"../timers/shared/input.js\"; \nimport { GlobalContext } from \"../../App.js\";\n\nconst Countdown = (props) => {\n  const index = props.index;\n  const [time, setTime] = useState((props.minutes * 60 + props.seconds) * 1000);\n  const {\n    activeIndex,\n    timers,\n    setTimers,\n    setActiveIndex,\n    timerIsRunning,\n  } = useContext(GlobalContext);\n  const isActive = props.index === activeIndex;\n\n  useEffect(() => {\n    let interval;\n\n    if (isActive && time > 0 && timerIsRunning) {\n      console.log({ index, activeIndex });\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime - 1000);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      console.log({ index, activeIndex });\n      setActiveIndex(index + 1);\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [time, activeIndex, index, isActive, setActiveIndex, timerIsRunning]);\n\n  \n\n  const handleSetMinutes = (mins) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      minutes: mins,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetSeconds = (secs) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      seconds: secs,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  return (\n    <div className=\"countdown\">\n      <Input\n        minutes={props.minutes}\n        setMinutes={handleSetMinutes}\n        seconds={props.seconds}\n        setSeconds={handleSetSeconds}\n        disabled={isActive}\n      />\n      <DisplayTime time={time} />\n      \n    </div>\n  );\n};\n\nexport default Countdown;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledProgressBar = styled.div`\n  width: 100%;\n  height: 94px;\n  margin-bottom: 10px;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n  background-color: black;\n  overflow: hidden;\n  opacity: ${(props) => (props.value > 0 ? 1 : 0)};\n  transition: opacity 0.5s ease-in-out;\n\n  & > div {\n    width: ${(props) => props.value}%;\n    height: 100%;\n    border-radius: 10px;\n    background-color: darkred;\n    transition: width 1s linear; \n  }\n`;\n\nconst ProgressBar = ({ value, max }) => (\n  <StyledProgressBar value={(value / max) * 100}>\n    <div />\n  </StyledProgressBar>\n);\n\nexport default ProgressBar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst DisplayRoundsContainer = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  flex-direction: row;\n  align-items: center;\n  background-color: #121212;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n  background-image: \n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%);\n  background-size: 30px 30px, 30px 30px, 30px 30px, 30px 30px;\n  background-position: 0 0, 10px 10px, 20px 20px, 15px 15px;\n`;\n\nconst LabelContainer = styled.div`\n  flex: 1;\n  align-items: center;\n  border-radius: 25px;\n  margin: 10px;\n  background-color: black;\n`;\n\nconst DisplayRoundsLabel = styled.label`\nflex: 1; \nfont-weight: 300;\nfont-size: 16px;\nbackground-color: black;\ncolor: #fff;\nborder: none;\ncursor: pointer;\n`;\nconst DisplayRoundsSelect = styled.select`\nflex: 1;\n  font-weight: 300;\n  font-size: 16px;\n  padding: 7px;\n  margin: 10px 0px 10px 10px;\n  background-color: darkred;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  border-radius: 25px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: black;\n  }\n`;\n\nconst renderOptions = (start, end) => {\n  const options = [];\n  for (let i = start; i <= end; i++) {\n    options.push(\n      <option key={i} value={i}>\n        {i < 10 ? `0${i}` : i}\n      </option>\n    );\n  }\n  return options;\n};\n\nconst DisplayRounds = ({ currentRound, initialRounds, onRoundsChange, disabled, resting }) => {\n  const [rounds, setRounds] = useState(initialRounds);\n\n  useEffect(() => {\n    if (resting) {\n      setRounds(currentRound);\n    }\n  }, [currentRound, resting]);\n\n  const handleRoundsChange = (newRounds) => {\n    setRounds(newRounds);\n    onRoundsChange(newRounds);\n  };\n\n  return (\n    <DisplayRoundsContainer>\n      <LabelContainer>\n      <DisplayRoundsLabel>\n        ROUND {currentRound} / {rounds}\n      </DisplayRoundsLabel>\n      <DisplayRoundsSelect\n        value={rounds}\n        onChange={(e) => handleRoundsChange(Number(e.target.value))}\n        disabled={disabled || resting}\n      >\n        {renderOptions(1, 100)}\n      </DisplayRoundsSelect>\n      </LabelContainer>\n    </DisplayRoundsContainer>\n  );\n};\n\nexport default DisplayRounds;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Input from \"../timers/shared/input.js\";\nimport ProgressBar from \"../timers/shared/ProgressBar.js\";\nimport DisplayRounds from \"../timers/shared/DisplayRounds\";\nimport { GlobalContext } from \"../../App.js\";\n\nconst Tabata = (props) => {\n  const rounds = props.rounds;\n  const index = props.index;\n  const initialTime = (props.minutes * 60 + props.seconds) * 1000;\n\n  const [time, setTime] = useState(initialTime);\n\n  const [running, setRunning] = useState(false);\n  const [currentRound, setCurrentRound] = useState(1);\n  const [isResting, setIsResting] = useState(false);\n  const [, setProgress] = useState(0);\n\n  const {\n    setActiveIndex,\n    activeIndex,\n    timers,\n    setTimers,\n    timerIsRunning,\n  } = useContext(GlobalContext);\n  const isActive = props.index === activeIndex;\n\n\n  const calculateProgress = () => {\n    if (isResting) {\n      return (time / initialTime) * 100;\n    } else {\n      return ((initialTime - time) / initialTime) * 100;\n    }\n  };\n\n  useEffect(() => {\n    let interval;\n  \n    if (isActive && time > 0 && timerIsRunning) {\n      interval = setInterval(() => {\n        setTime((prevTime) => Math.max(0, prevTime - 1000));\n        // Update progress during the rest period\n        if (isResting) {\n          const remainingTime = time / initialTime;\n          setProgress(1000 - remainingTime * 1000);\n        }\n      }, 1000);\n    } else if (isActive && time === 0) {\n      console.log({ index, activeIndex });\n      clearInterval(interval);\n      if (isResting) {\n        setIsResting(false);\n        setCurrentRound((prevRound) => prevRound + 1);\n        setTime(initialTime);\n        setRunning(true);\n        setProgress(0); \n      } else {\n        setIsResting(true);\n        setTime(initialTime);\n        setRunning(true);\n      }\n  \n      if (currentRound >= rounds) {\n        setActiveIndex(index + 1);\n        setCurrentRound(1);\n        setIsResting(false);\n        setTime(0);\n        setRunning(false);\n        setProgress(0); \n      }\n    } else {\n      console.log({ index, activeIndex });\n      clearInterval(interval);\n    }\n  \n    return () => clearInterval(interval);\n  }, [running, time, isResting, initialTime, currentRound, rounds, activeIndex, setActiveIndex, index, isActive, timerIsRunning]);\n  \n\n  \n  const handleSetMinutes = (mins) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      minutes: mins,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetSeconds = (secs) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      seconds: secs,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetRounds = (rnds) => {\n    const timerToEdit = timers[index];\n    const updatedTimer = {\n      ...timerToEdit,\n      rounds: rnds,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  return (\n    <div className=\"timer\">\n      <DisplayRounds\n        currentRound={currentRound}\n        initialRounds={props.rounds}\n        onRoundsChange={handleSetRounds}\n      />\n      <Input\n        minutes={props.minutes}\n        setMinutes={handleSetMinutes}\n        seconds={props.seconds}\n        setSeconds={handleSetSeconds}\n        disabled={running}\n      />\n      <div className=\"display-time\">\n        {isResting ? (\n          // If in rest state, display progress bar\n          <ProgressBar value={calculateProgress()} max=\"100\" />\n        ) : (\n          <DisplayTime time={time} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Tabata;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 16px;\n  padding: 10px;\n  margin: 5px;\n  background-color: darkred; /* Green color */\n  color: #fff; /* White text */\n  border: none;\n  cursor: pointer;\n  border-radius: 25px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: black; \n  }\n`;\n\n\n\nconst Button = ({ onClick, children }) => (\n  <StyledButton onClick={onClick}>{children}</StyledButton>\n);\n\nexport default Button;\n\n\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledPanel = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: #121212; \n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n  background-image: \n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%);\n  background-size: 30px 30px, 30px 30px, 30px 30px, 30px 30px;\n  background-position: 0 0, 10px 10px, 20px 20px, 15px 15px;\n`;\n\nconst Panel = ({ children }) => <StyledPanel>{children}</StyledPanel>;\n\nexport default Panel;\n\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Button from \"../timers/shared/button.js\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Panel from \"../timers/shared/Panel.js\";\nimport { FaFastForward } from \"react-icons/fa\";\nimport { GlobalContext } from \"../../App.js\";\n\n\nconst Stopwatch = (props) => {\n  const [time, setTime] = useState((props.minutes * 60 + props.seconds) * 1000);\n  const {\n    activeIndex,\n    setActiveIndex,\n  } = useContext(GlobalContext);\n  const isActive = props.index === activeIndex;\n\n//   const [time, setTime] = useState(0);\n//   const [running, setRunning] = useState(false);\n//   const { setActiveIndex } = useContext(GlobalContext);\n  useEffect(() => {\n    let interval;\n\n    if (isActive) {\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 1000);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isActive, activeIndex]);\n\n  const handleFastForward = () => {\n    setActiveIndex(props.index + 1);\n    setTime(0);\n  };\n\n\n  return (\n    <div className=\"stopwatch\">\n      <DisplayTime time={time} />\n      <Panel>\n      <Button onClick={handleFastForward}>\n          <FaFastForward />\n        </Button>\n      </Panel>\n    </div>\n  );\n};\n\nexport default Stopwatch;","import React, { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Input from \"../timers/shared/input.js\"; \nimport DisplayRounds from \"../timers/shared/DisplayRounds\";\nimport { GlobalContext } from \"../../App.js\";\n\nconst XY = (props) => {\n  const rounds = props.rounds;\n  const index = props.index;\n  const initialTime = (props.minutes * 60 + props.seconds) * 1000;\n\n  const [time, setTime] = useState(initialTime);\n  const [running, setRunning] = useState(false);\n  const [currentRound, setCurrentRound] = useState(1);\n\n  const {\n    setActiveIndex,\n    activeIndex,\n    timers,\n    setTimers,\n    timerIsRunning,\n  } = useContext(GlobalContext);\n\n  const isActive = props.index === activeIndex;\n\n  useEffect(() => {\n    let interval;\n\n    if (isActive && time > 0 && timerIsRunning) {\n      interval = setInterval(() => {\n        setTime((prevTime) => Math.max(0, prevTime - 1000));\n      }, 1000);\n    } else if (isActive && time === 0) {\n      clearInterval(interval);\n      setCurrentRound((prevRound) => prevRound + 1);\n\n      if (currentRound >= rounds) {\n        setActiveIndex(index + 1);\n        setCurrentRound(1);\n        setTime(0);\n        setRunning(false);\n      } else {\n        setTime(initialTime);\n        setRunning(true);\n      }\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [running, time, initialTime, currentRound, rounds, activeIndex, setActiveIndex,index, isActive, timerIsRunning]);\n\n  const handleSetMinutes = (mins) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      minutes: mins,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetSeconds = (secs) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      seconds: secs,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetRounds = (rnds) => {\n    const timerToEdit = timers[index];\n    const updatedTimer = {\n      ...timerToEdit,\n      rounds: rnds,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  return (\n    <div className=\"timer\">\n      <DisplayRounds\n        currentRound={currentRound}\n        initialRounds={props.rounds}\n        onRoundsChange={handleSetRounds}\n      />\n      <Input\n        minutes={props.minutes}\n        setMinutes={handleSetMinutes}\n        seconds={props.seconds}\n        setSeconds={handleSetSeconds}\n        disabled={running}\n      />\n      <div className=\"display-time\">\n        <DisplayTime time={time} />\n      </div>\n    </div>\n  );\n};\n\nexport default XY;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../App.js\";\nimport { FaPlus, FaFastForward } from \"react-icons/fa\";\nimport Countdown from \"../components/timers/Countdown.js\";\nimport Tabata from \"../components/timers/Tabata.js\";\nimport Stopwatch from \"../components/timers/Stopwatch.js\";\nimport XY from \"../components/timers/XY.js\";\n\nconst Timers = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Timer = styled.div`\n  border: 1px solid gray;\n  background-color: black;\n  border-radius: 30px;\n  margin: 10px;\n  padding: 20px;\n  font-size: 1.5rem;\n  color: darkred;\n  width: 100%;\n  text-align: center;\n`;\n\nconst StyledButton = styled.button`\n  background-color: darkred;\n  color: white;\n  padding: 10px 20px;\n  margin: 0 10px;\n  border: none;\n  border-radius: 25px;\n  font-size: 1rem;\n  font-weight: 400;\n  cursor: pointer;\n\n  &:hover {\n    background-color: red;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  background-color: black;\n  padding: 25px;\n  background-color: #121212; \n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n  background-image: \n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%);\n  background-size: 30px 30px, 30px 30px, 30px 30px, 30px 30px;\n  background-position: 0 0, 10px 10px, 20px 20px, 15px 15px;\n`;\n\nconst TimerGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 30px;\n`;\n\n\nconst AddButton = styled(Link)`\n  margin-top: 20px;\n  padding: 10px;\n  background-color: #4caf50;\n  color: white;\n  text-decoration: none;\n  border-radius: 25px;\n\n  &:hover {\n    background-color: darkgreen;\n  }\n`;\nconst renderComponent = (timerItem, index) => {\n  let component;\n  if (timerItem.componentType === \"COUNTDOWN\") {\n    component = (\n      <Countdown\n        index={index}\n        minutes={timerItem.minutes}\n        seconds={timerItem.seconds}\n      />\n    );\n  }\n  if (timerItem.componentType === \"TABATA\") {\n    component = (\n      <Tabata\n        index={index}\n        minutes={timerItem.minutes}\n        seconds={timerItem.seconds}\n        rounds={timerItem.rounds}\n      />\n    );\n  }\n  if (timerItem.componentType === \"STOPWATCH\") {\n    component = <Stopwatch index={index}\n    minutes={timerItem.minutes}\n    seconds={timerItem.seconds} />;\n  }\n  if (timerItem.componentType === \"XY\") {\n    component = <XY \n    index={index}\n    minutes={timerItem.minutes}\n    seconds={timerItem.seconds}\n    rounds={timerItem.rounds} />;\n  }\n  return component;\n};\n\nconst TimersView = () => {\n  const {\n    activeIndex,\n    setActiveIndex,\n    isPaused,\n    setIsPaused,\n    setTimerIsRunning,\n    timers,\n  } = useContext(GlobalContext);\n\n  const handleFastForward = () => {\n    setActiveIndex(activeIndex + 1);\n    setIsPaused(false);\n    setTimerIsRunning(true);\n  };\n\n  const handlePausePlay = () => {\n    setTimerIsRunning(!setTimerIsRunning);\n    setIsPaused(true);\n  };\n\n  return (\n    <div>\n      <ButtonGroup>\n        {timers.length > 0 ? (\n          <>\n            <StyledButton\n              onClick={() => {\n                setActiveIndex(0);\n                setTimerIsRunning(true);\n              }}\n            >\n              Start\n            </StyledButton>\n            <StyledButton onClick={handleFastForward}>\n              <FaFastForward /> \n            </StyledButton>\n            <StyledButton onClick={handlePausePlay}>\n                  {isPaused ? \"Play\" : \"Pause\"}\n                </StyledButton>\n          </>\n        ) : null}\n      </ButtonGroup>\n      <div></div>\n      <TimerGroup>\n      <Timers>\n        {timers.length > 0 ? (\n          timers.map((timer, index) => (\n            <Timer key={index}>\n              {renderComponent(timer, index)}\n            </Timer>\n          ))\n        ) : (\n          <div>Configure your timers!</div>\n        )}\n        <AddButton to=\"/add\"><FaPlus /></AddButton>\n      </Timers>\n      </TimerGroup>\n    </div>\n  );\n};\n\nexport default TimersView;","import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../App.js\";\n\nconst BackButton = styled(Link)`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  padding: 10px;\n  background-color: gray;\n  color: white;\n  border-radius: 25px;\n  text-decoration: none;\n  font-size: 1.2rem;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    background-color: darkblue;\n  }\n`;\n\nconst BackButtonIcon = styled(FaArrowLeft)`\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  background-color: black;\n  padding: 25px;\n  background-color: #121212; \n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n  background-image: \n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%);\n  background-size: 30px 30px, 30px 30px, 30px 30px, 30px 30px;\n  background-position: 0 0, 10px 10px, 20px 20px, 15px 15px;\n`;\n\nconst StyledRemoveButton = styled.button`\n  background-color: Darkred;\n  color: red;\n  align-items: center;\n  padding: 10px 20px;\n  margin-top: 20px;\n  border: none;\n  border-radius: 25px;\n  font-size: 1.2rem;\n  cursor: pointer;\n\n  &:hover {\n    background-color: red;\n    color: white;\n  }\n`;\n\nconst StyledButton = styled.button`\n  background-color: darkred;\n  color: white;\n  padding: 10px 20px;\n  margin: 0 10px;\n  border: none;\n  border-radius: 25px;\n  font-size: 1rem;\n  font-weight: 400;\n  cursor: pointer;\n\n  &:hover {\n    background-color: red;\n  }\n`;\n\n\nconst Timers = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst TimerGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 30px;\n`;\n\nconst Timer = styled.div`\n  border: 1px solid gray;\n  background-color: black;\n  border-radius: 30px;\n  margin: 10px;\n  padding: 20px;\n  font-size: 1.5rem;\n  color: darkred;\n  width: 100%;\n  text-align: center;\n`;\n\nconst TimerTitle = styled.div`\n  margin: 25px;\n  font-weight: bold\n  font-size:;\n`;\n\nconst TimerButtons = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  margin-top: 10px;\n`;\n\nconst AddView = ({ onRemoveTimer }) => {\n  const [timerQueue, setTimerQueue] = useState([]);\n  const { timers, setTimers } = useContext(GlobalContext);\n  const TIMERS = [\n    {\n      key: \"timer-countdown\",\n      title: \"Countdown\",\n      componentType: \"COUNTDOWN\",\n    },\n    { key: \"timer-tabata\", title: \"Tabata\", componentType: \"TABATA\" },\n    {\n      key: \"timer-stopwatch\",\n      title: \"Stopwatch\",\n      componentType: \"STOPWATCH\",\n    },\n    { key: \"timer-xy\", title: \"XY\", componentType: \"XY\" },\n  ];\n  const handleAddTimer = (timerItem) => {\n    // Pass the configured timer to the parent component\n    console.log({ timerItem });\n\n    const timersLength = timers.length;\n    const index = timersLength;\n    const newTimersQueue = [\n      ...timers,\n      {\n        ...timerItem,\n        title: timerItem.title,\n        index: index,\n        key: index,\n        minutes: 0,\n        seconds: 0,\n      },\n    ];\n    setTimers(newTimersQueue);\n  };\n\n  const handleRemoveTimer = (index) => {\n    const updatedTimers = [...timerQueue];\n    const removedTimer = updatedTimers.splice(index, 1)[0];\n    console.log(\"Updated Timers:\", updatedTimers);\n    console.log(\"Removed Timer:\", removedTimer);\n    onRemoveTimer(updatedTimers, removedTimer);\n    setTimerQueue(updatedTimers); // Make sure to update the state with the modified timers\n  };\n\n\n  const renderComponent = (timerItem, index) => {\n    let component;\n    if (timerItem.componentType === \"COUNTDOWN\") {\n      component = (\n        <Countdown\n          index={index}\n          minutes={timerItem.minutes}\n          seconds={timerItem.seconds}\n        />\n      );\n    }\n    if (timerItem.componentType === \"TABATA\") {\n      component = (\n        <Tabata\n          index={index}\n          minutes={timerItem.minutes}\n          seconds={timerItem.seconds}\n          rounds={timerItem.rounds}\n        />\n      );\n    }\n    if (timerItem.componentType === \"STOPWATCH\") {\n      component = <Stopwatch \n      minutes={timerItem.minutes}\n      seconds={timerItem.seconds}\n      index={index} />;\n    }\n    if (timerItem.componentType === \"XY\") {\n      component = <XY \n      index={index}\n      minutes={timerItem.minutes}\n      seconds={timerItem.seconds}\n      rounds={timerItem.rounds}\n    />;\n    }\n    return component;\n  };\n\n  return (\n    <>\n      <BackButton to=\"/\">\n        <BackButtonIcon />\n      </BackButton>\n      <ButtonGroup>\n        {TIMERS.map((timer) => (\n          <StyledButton key={timer.key} onClick={() => handleAddTimer(timer)}>\n            {timer.title}\n          </StyledButton>\n        ))}\n      </ButtonGroup>\n      <div></div>\n      <Timers>\n        <TimerGroup>\n          {timers.map((queueItem, index) => {\n            return (\n              <Timer key={queueItem.key}>\n                <TimerTitle>{queueItem.title}</TimerTitle>\n                {renderComponent(queueItem, index)}\n                <TimerButtons>\n                  <StyledRemoveButton onClick={() => handleRemoveTimer(index)}>\n                    Remove\n                  </StyledRemoveButton>\n                </TimerButtons>\n              </Timer>\n            );\n          })}\n        </TimerGroup>\n      </Timers>\n    </>\n  );\n};\n\nexport default AddView;","import React, { useState, createContext, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route,} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\nimport AddView from \"./views/AddView\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\n\nexport const GlobalContext = createContext(null);\n\nconst App = () => {\n  const [timers, setTimers] = useState([]);\n  const [activeIndex, setActiveIndex] = useState(null);\n  const [timerIsRunning, setTimerIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [pausedIndex, setPausedIndex] = useState();\n  \n  const handleRemoveTimer = (updatedTimers, removedTimer) => {\n    setTimers(updatedTimers);\n    // You can perform additional actions based on the removedTimer if needed\n    console.log(\"Removed Timer:\", removedTimer);\n  };\n\n  useEffect(() => {\n    console.log(\"App.js global state active index:\", activeIndex);\n  }, [activeIndex]);\n\n  useEffect(() => {\n    console.log({ timers });\n  }, [timers]);\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        timers,\n        setTimers,\n        timerIsRunning,\n        setTimerIsRunning,\n        activeIndex,\n        setActiveIndex,\n        isPaused,\n        setIsPaused,\n        pausedIndex,\n        setPausedIndex,\n      }}\n    >\n      <Container>\n        <Router>\n          <Routes>\n            <Route path=\"/docs\" element={<DocumentationView />} />\n            <Route path=\"/\" element={<TimersView />} />\n            <Route\n              path=\"/add\"\n              element={<AddView onRemoveTimer={handleRemoveTimer} />}\n            />\n          </Routes>\n        </Router>\n      </Container>\n    </GlobalContext.Provider>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}